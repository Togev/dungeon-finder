# Generated by Django 5.2.4 on 2025-07-22 19:56

import django.db.models.deletion
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('table_groups', '0001_initial'),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField()),
                ('looking_for_players', models.BooleanField(default=False)),
                ('looking_for_dm', models.BooleanField(default=False)),
                ('num_players', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('game_system', models.CharField(blank=True, max_length=50)),
                ('session_frequency', models.CharField(blank=True, choices=[('Weekly', 'Weekly'), ('Biweekly', 'Biweekly'), ('Monthly', 'Monthly'), ('One-shot', 'One-shot'), ('Infrequent', 'Infrequent')], max_length=20)),
                ('location_type', models.CharField(blank=True, choices=[('Online', 'Online'), ('In Person', 'In Person')], max_length=20)),
                ('location_details', models.CharField(blank=True, max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ads', to=settings.AUTH_USER_MODEL)),
                ('table', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ad', to='table_groups.table')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
    ]
